// Generated by CoffeeScript 1.7.1
(function() {
  module.exports = function(grunt) {
    var config, cssFiles, delOptions;
    cssFiles = ['public/stylesheets/bootstrap.css', 'public/stylesheets/animate+animo.css', 'public/stylesheets/select2.css', 'public/stylesheets/chosen.css', 'public/stylesheets/jquery.fileupload.css', 'public/stylesheets/jquery.fileupload-ui.css', 'public/stylesheets/jquery.fileupload-ui-noscript.css', 'public/stylesheets/colorbox.css', 'public/stylesheets/application.css'];
    delOptions = {
      force: true
    };
    config = {
      "public": 'public'
    };
    grunt.initConfig({
      pkg: [grunt.file.readJSON('package.json')],
      concat: {
        css: {
          src: cssFiles,
          dest: 'public/stylesheets/application-all.css'
        }
      },
      cssmin: {
        css: {
          src: 'public/stylesheets/application-all.css',
          dest: 'public/stylesheets/application-all-min.css'
        }
      },
      watch: {
        scripts: {
          files: cssFiles,
          tasks: ['concat', 'cssmin'],
          options: {
            nospawn: true
          }
        },
        coffee: {
          files: ['<%= config.public %>/javascripts/{,*/}*.coffee'],
          tasks: ['coffee:dist']
        }
      },
      requirejs: {
        compile: {
          options: {
            mainConfigFile: 'public/javascripts/app/requirejs-config.js',
            done: function(done, output) {
              return done;
            },
            baseUrl: "public/javascripts",
            dir: 'public/build',
            fileExclusionRegExp: /.coffee$/,
            paths: {
              filepicker: "empty:"
            },
            modules: [
              {
                name: 'app/application'
              }, {
                name: 'app/models'
              }, {
                name: 'app/home'
              }, {
                name: 'app/post-show'
              }, {
                name: 'app/post-article'
              }, {
                name: 'app/user-edit'
              }, {
                name: 'app/reg'
              }, {
                name: 'app/user'
              }, {
                name: 'app/review'
              }, {
                name: 'app/user-blogs'
              }, {
                name: 'app/user-show'
              }
            ]
          }
        }
      },
      clean: {
        js: ["!public/build/app", "public/build/*.*", "public/build/*.*", "public/build/*.*"]
      },
      coffee: {
        options: {
          includePaths: ['bower_components']
        },
        dist: {
          files: [
            {
              expand: true,
              cwd: '<%= config.public %>/javascripts',
              src: ['*.coffee'],
              dest: '<%= config.public %>/javascripts',
              ext: '.js'
            }
          ]
        }
      }
    });
    grunt.loadNpmTasks('grunt-contrib-requirejs');
    grunt.loadNpmTasks('grunt-contrib-concat');
    grunt.loadNpmTasks('grunt-css');
    grunt.loadNpmTasks('grunt-contrib-watch');
    grunt.loadNpmTasks('grunt-contrib-clean');
    grunt.registerTask('clean-source', ['clean']);
    grunt.registerTask('css', ['concat', 'cssmin']);
    return grunt.registerTask('default', ['concat', 'cssmin', 'requirejs']);
  };

}).call(this);

//# sourceMappingURL=Gruntfile.map
