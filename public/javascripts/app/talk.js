// Generated by CoffeeScript 1.6.3
/*
  Add your application's coffee-script code here
  Global Applcitiaon
*/


(function() {
  require.config({
    baseUrl: '/javascripts',
    shim: {
      'bootstrap': {
        deps: ['jquery']
      },
      'chosen': {
        exports: 'chosen'
      }
    },
    paths: {
      'jquery': 'jquery-2.0.3.min',
      'bootstrap': 'bootstrap.min',
      'socket.io': 'socket.io'
    }
  });

  require(['jquery', 'bootstrap', 'socket.io'], function($) {
    var message, socket;
    socket = io.connect('http://localhost:10000');
    socket.on('connect', function() {
      return console.log('connect');
    });
    socket.on('announcement', function(msg) {
      return $('#line').append($('<p>').append($('<em>')).text(msg));
    });
    socket.on('nickname', function(nicknames) {
      var i, _i, _len, _results;
      $('#nicknames').empty();
      _results = [];
      for (_i = 0, _len = nicknames.length; _i < _len; _i++) {
        i = nicknames[_i];
        _results.push($('#nicknames').append($('<p>').text(nicknames[i] + '  ')));
      }
      return _results;
    });
    socket.on('user message', message);
    socket.on('reconnect', function() {
      $('#line').remove();
      return message('System update', 'reconnect server');
    });
    socket.on('reconnecting', function() {
      return message('System', 'Attempting to re-connect to the server');
    });
    socket.on('error', function(e) {
      return message('System', e != null ? e : {
        e: 'A unknown error occurred'
      });
    });
    message = function(from, msg) {
      var p, size;
      $('#lines').append($('<p>').append('<b>' + from + ' : </b>' + msg));
      p = $('#lines p:last').position();
      size = $('#lines p').size();
      return $('#lines').get(0).scrollTop = size * 200;
    };
    return $(function() {
      var clear;
      $('#set-nickname').submit(function(ev) {
        socket.emit('nickname', $('#nick').val());
        return false;
      });
      $('#send-message').submit(function() {
        socket.emit('user message', $('#editor_id').val());
        clear();
        return false;
      });
      return clear = function() {
        return $('#editor_id').val('').focus();
      };
    });
  });

}).call(this);
