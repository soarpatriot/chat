// Generated by CoffeeScript 1.6.3
/*
  review coffee-script
*/


(function() {
  require.config({
    baseUrl: '/javascripts',
    shim: {
      'underscore': {
        exports: '_'
      },
      'bootstrap': {
        deps: ['jquery']
      }
    },
    paths: {
      'jquery': 'jquery-1.9.1.min',
      'bootstrap': 'bootstrap.min',
      'underscore': 'underscore'
    }
  });

  require(['jquery', 'underscore', 'bootstrap'], function($, _) {
    return $(function() {
      var btnInterval, check, postId, supportText, timeLeft, voteText, wait;
      postId = $('#post-id').val();
      wait = 15000;
      supportText = $('#support').text();
      voteText = $('#veto').text();
      $('#support').button('loading');
      $('#veto').button('loading');
      timeLeft = function() {
        var waitSecond;
        waitSecond = wait / 1000;
        $('#support').text(supportText + '(' + waitSecond + ')');
        $('#veto').text(voteText + '(' + waitSecond + ')');
        if (wait <= 0) {
          $('#support').button('reset');
          $('#veto').button('reset');
          clearInterval(btnInterval);
        }
        return wait = wait - 1000;
      };
      if (postId && postId !== 'empty') {
        btnInterval = setInterval(timeLeft, 1000);
      }
      $('#support').click(function() {
        if (check()) {
          $('#passed').attr({
            value: 'true'
          });
          return $('#review-form').submit();
        } else {
          return alert('error');
        }
      });
      $('#veto').click(function() {
        btn.button('reset');
        if (check()) {
          $('#passed').attr({
            value: 'false'
          });
          return $('#review-form').submit();
        } else {
          return alert('error');
        }
      });
      return check = function() {
        var valid;
        postId = $('#post-id').val();
        return valid = _.isNull(postId) ? false : true;
      };
    });
  });

}).call(this);
